set original_path [pwd]

cd [file dirname [file normalize [info script]]]
#-------------------------------------------------------------------------------

# Get the minutes and seconds separarately to avoid empty strings
set Minute [string trimleft [clock format [clock seconds] -format {%M}] "0"]
set Second [string trimleft [clock format [clock seconds] -format {%S}] "0"]

if {[string length $Minute] == 0} {set Minute "0"}
if {[string length $Second] == 0} {set Second "0"}

# Convert to BCD
set Year   [format "%04d" [clock format [clock seconds] -format {%Y}] ]
set Month  [format "%02d" [clock format [clock seconds] -format {%N}] ]
set Day    [format "%02d" [clock format [clock seconds] -format {%e}] ]

set Hour   [format "%02d" [clock format [clock seconds] -format {%k}] ]
set Minute [format "%02d" $Minute]
set Second [format "%02d" $Second]
#-------------------------------------------------------------------------------

set GitHash [exec git rev-parse --short=8 HEAD]
puts $GitHash
#-------------------------------------------------------------------------------

set fh [open FirmwareVersion.v w ]
  fconfigure $fh -translation lf
  puts $fh "/*------------------------------------------------------------------------------"
  puts $fh ""
  puts $fh "Autogenerated by FirmwareVersion.tcl"
  puts $fh "------------------------------------------------------------------------------*/"
  puts $fh ""
  puts $fh "module FirmwareVersion #("
  puts $fh "  parameter Major,"
  puts $fh "  parameter Minor"
  puts $fh ")("
  puts $fh "  output \[31:0\]opVersion,"
  puts $fh "  output \[31:0\]opDate,"
  puts $fh "  output \[23:0\]opTime,"
  puts $fh "  output \[31:0\]opGitHash"
  puts $fh ");"
  puts $fh "//------------------------------------------------------------------------------"
  puts $fh ""
  puts $fh "assign opVersion\[31:16\] = Major;"
  puts $fh "assign opVersion\[15: 0\] = Minor;"
  puts $fh ""
  puts $fh "assign opDate    = 32'h_${Year}_${Month}_${Day};"
  puts $fh "assign opTime    = 24'h_${Hour}_${Minute}_${Second};"
  puts $fh "assign opGitHash = 32'h_${GitHash};"
  puts $fh "//------------------------------------------------------------------------------"
  puts $fh ""
  puts $fh "endmodule"
  puts $fh "//------------------------------------------------------------------------------"
close $fh
#-------------------------------------------------------------------------------

cd $original_path
#-------------------------------------------------------------------------------
