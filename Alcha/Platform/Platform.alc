import "Library/Platforms/DE0-Nano-SoC" as DE0;
//------------------------------------------------------------------------------

alias HPS_Pins  = DE0.HPS;
alias LEDs      = DE0.LEDs;
alias DipSwitch = DE0.Switches;
//------------------------------------------------------------------------------

group Synth{ // AD9915
  group SPI{
    alias SClk      = DE0.Arduino.IO[0];
    alias nCS       = DE0.Arduino.IO[1];
    alias SDIO      = DE0.Arduino.IO[2];
    alias SyncIO    = DE0.Arduino.IO[3];
    alias IO_Update = DE0.Arduino.IO[4];
  }
  alias DR_Control = DE0.Arduino.IO[ 9];
  alias DR_Hold    = DE0.Arduino.IO[10];
  alias DR_Over    = DE0.Arduino.IO[11];
}
//------------------------------------------------------------------------------

group ADC{ // ADS7056
  alias nCS  = DE0.Arduino.IO[5];
  alias SClk = DE0.Arduino.IO[6];
  alias Data = DE0.Arduino.IO[7];

  SClk'frequency = 60e6;

  nCS'set_output_delay'clock       = SClk;
  nCS'set_output_delay'delay       = 0e-3; // Source-synchronous
  nCS'set_output_delay'uncertainty = 50e-12;

  Data'set_input_delay'clock       = SClk;
  Data'set_input_delay'delay       = 100e-3 / 2e8;
  Data'set_input_delay'uncertainty = 50e-12;
}
//------------------------------------------------------------------------------

alias TxEnable = DE0.Arduino.IO[8];
//------------------------------------------------------------------------------

net(36) Debug;
DE0.GPIO[0] = Debug;
//------------------------------------------------------------------------------

group I2C{ // LTC2991
  alias SClk = DE0.Arduino.IO[15];
  alias Data = DE0.Arduino.IO[14];

  SClk'pullup = true;
  SClk.driver = 0;
  SClk.enable = 0;

  Data'pullup = true;
  Data.driver = 0;
  Data.enable = 0;
}
//------------------------------------------------------------------------------

net ResetKey = ~DE0.Keys[0];
//------------------------------------------------------------------------------

import "Library/Clocking_and_Reset/PLL_CycloneV";

PLL_CycloneV(DE0.Clock1, ResetKey, [120, 2.5]) PLL;
alias DspClock     = PLL.Output[0];
alias ControlClock = PLL.Output[1];
//------------------------------------------------------------------------------

import "Library/Clocking_and_Reset/DelayedReset";

net HPS_Reset      = DelayedReset(ControlClock, ResetKey | ~PLL.Locked, 1);
net HPS_FPGA_Reset = 0; // Assigned by SystemController
net MasterReset    = DelayedReset(ControlClock, HPS_FPGA_Reset | ResetKey | ~PLL.Locked, 100);
//------------------------------------------------------------------------------

